#include <stdio.h>
#include <stdlib.h>
struct Employee {
    int empId;
    char empName[50];
    float empSalary;
};
void addEmployee(FILE *file);
void displayEmployees(FILE *file);
void updateEmployee(FILE *file, int empId);
int main() {
    FILE *employeeFile;
    employeeFile = fopen("employee_data.dat", "r+");
    if (employeeFile == NULL) {
        employeeFile = fopen("employee_data.dat", "w+");
        if (employeeFile == NULL) {
            fprintf(stderr, "Error creating the file.\n");
            return 1;
        }
    }
    int choice;
    do {
        printf("\nEmployee Database\n");
        printf("1. Add Employee\n");
        printf("2. Display Employees\n");
        printf("3. Update Employee\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                addEmployee(employeeFile);
                break;
            case 2:
                displayEmployees(employeeFile);
                break;
            case 3: {
                int empId;
                printf("Enter the Employee ID to update: ");
                scanf("%d", &empId);
                updateEmployee(employeeFile, empId);
                break;
            }
            case 4:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 4);
    fclose(employeeFile);
    return 0;
}
void addEmployee(FILE *file) {
    struct Employee emp;
    printf("Enter Employee ID: ");
    scanf("%d", &emp.empId);
    printf("Enter Employee Name: ");
    scanf("%s", emp.empName);
    printf("Enter Employee Salary: ");
    scanf("%f", &emp.empSalary);
    fseek(file, 0, SEEK_END);
    fwrite(&emp, sizeof(struct Employee), 1, file);
    printf("Employee added successfully.\n");
}
void displayEmployees(FILE *file) {
    struct Employee emp;
    fseek(file, 0, SEEK_SET);
    printf("\nEmployee Details:\n");
    printf("%-10s%-20s%-10s\n", "Emp ID", "Emp Name", "Emp Salary");
    while (fread(&emp, sizeof(struct Employee), 1, file) == 1) {
        printf("%-10d%-20s%-10.2f\n", emp.empId, emp.empName, emp.empSalary);
    }
}
void updateEmployee(FILE *file, int empId) {
    struct Employee emp;
    int found = 0;
    fseek(file, 0, SEEK_SET);
    while (fread(&emp, sizeof(struct Employee), 1, file) == 1) {
        if (emp.empId == empId) {
            found = 1;
            printf("Enter new Employee Name: ");
            scanf("%s", emp.empName);
            printf("Enter new Employee Salary: ");
            scanf("%f", &emp.empSalary);
            fseek(file, -sizeof(struct Employee), SEEK_CUR);
            fwrite(&emp, sizeof(struct Employee), 1, file);
            printf("Employee updated successfully.\n");
            break;
        }
    }
    if (!found) {
        printf("Employee with ID %d not found.\n", empId);
    }
}
